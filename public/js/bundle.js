(()=>{(()=>{"use strict";var F={};F.d=(e,t)=>{for(var n in t)F.o(t,n)&&!F.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},F.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var ge={};F.d(ge,{ow:()=>D,dN:()=>Q,iM:()=>Y,Es:()=>f,nF:()=>I});function T(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return[...e.geometry.coordinates];if(e.type==="Point")return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function de(e){if(Array.isArray(e))return e;if(e.type==="Feature"){if(e.geometry!==null)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function me(e){if(e.length>1&&isNumber(e[0])&&isNumber(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return me(e[0]);throw new Error("coordinates must only contain numbers")}function Ze(e,t,n){if(!t||!n)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+n+": must be a "+t+", given "+e.type)}function je(e,t,n){if(!e)throw new Error("No feature passed");if(!n)throw new Error(".featureOf() requires a name");if(!e||e.type!=="Feature"||!e.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+n+": must be a "+t+", given "+e.geometry.type)}function et(e,t,n){if(!e)throw new Error("No featureCollection passed");if(!n)throw new Error(".collectionOf() requires a name");if(!e||e.type!=="FeatureCollection")throw new Error("Invalid input to "+n+", FeatureCollection required");for(const r of e.features){if(!r||r.type!=="Feature"||!r.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!r.geometry||r.geometry.type!==t)throw new Error("Invalid input to "+n+": must be a "+t+", given "+r.geometry.type)}}function tt(e){return e.type==="Feature"?e.geometry:e}function nt(e,t){return e.type==="FeatureCollection"?"FeatureCollection":e.type==="GeometryCollection"?"GeometryCollection":e.type==="Feature"&&e.geometry!==null?e.geometry.type:e.type}var M=63710088e-1,Z={centimeters:M*100,centimetres:M*100,degrees:360/(2*Math.PI),feet:M*3.28084,inches:M*39.37,kilometers:M/1e3,kilometres:M/1e3,meters:M,metres:M,miles:M/1609.344,millimeters:M*1e3,millimetres:M*1e3,nauticalmiles:M/1852,radians:1,yards:M*1.0936},j={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,nauticalmiles:29155334959812285e-23,millimeters:1e6,millimetres:1e6,yards:1.195990046};function k(e,t,n={}){const r={type:"Feature"};return(n.id===0||n.id)&&(r.id=n.id),n.bbox&&(r.bbox=n.bbox),r.properties=t||{},r.geometry=e,r}function rt(e,t,n={}){switch(e){case"Point":return w(t).geometry;case"LineString":return O(t).geometry;case"Polygon":return ee(t).geometry;case"MultiPoint":return ve(t).geometry;case"MultiLineString":return ye(t).geometry;case"MultiPolygon":return we(t).geometry;default:throw new Error(e+" is invalid")}}function w(e,t,n={}){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!K(e[0])||!K(e[1]))throw new Error("coordinates must contain numbers");return k({type:"Point",coordinates:e},t,n)}function ot(e,t,n={}){return A(e.map(r=>w(r,t)),n)}function ee(e,t,n={}){for(const o of e){if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(o[o.length-1].length!==o[0].length)throw new Error("First and last Position are not equivalent.");for(let i=0;i<o[o.length-1].length;i++)if(o[o.length-1][i]!==o[0][i])throw new Error("First and last Position are not equivalent.")}return k({type:"Polygon",coordinates:e},t,n)}function it(e,t,n={}){return A(e.map(r=>ee(r,t)),n)}function O(e,t,n={}){if(e.length<2)throw new Error("coordinates must be an array of two or more positions");return k({type:"LineString",coordinates:e},t,n)}function at(e,t,n={}){return A(e.map(r=>O(r,t)),n)}function A(e,t={}){const n={type:"FeatureCollection"};return t.id&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.features=e,n}function ye(e,t,n={}){return k({type:"MultiLineString",coordinates:e},t,n)}function ve(e,t,n={}){return k({type:"MultiPoint",coordinates:e},t,n)}function we(e,t,n={}){return k({type:"MultiPolygon",coordinates:e},t,n)}function st(e,t,n={}){return k({type:"GeometryCollection",geometries:e},t,n)}function lt(e,t=0){if(t&&!(t>=0))throw new Error("precision must be a positive number");const n=Math.pow(10,t||0);return Math.round(e*n)/n}function te(e,t="kilometers"){const n=Z[t];if(!n)throw new Error(t+" units is invalid");return e*n}function U(e,t="kilometers"){const n=Z[t];if(!n)throw new Error(t+" units is invalid");return e/n}function ct(e,t){return G(U(e,t))}function ut(e){let t=e%360;return t<0&&(t+=360),t}function ft(e){return e=e%360,e>0?e>180?e-360:e:e<-180?e+360:e}function G(e){return e%(2*Math.PI)*180/Math.PI}function L(e){return e%360*Math.PI/180}function pt(e,t="kilometers",n="kilometers"){if(!(e>=0))throw new Error("length must be a positive number");return te(U(e,t),n)}function ht(e,t="meters",n="kilometers"){if(!(e>=0))throw new Error("area must be a positive number");const r=j[t];if(!r)throw new Error("invalid original units");const o=j[n];if(!o)throw new Error("invalid final units");return e/r*o}function K(e){return!isNaN(e)&&e!==null&&!Array.isArray(e)}function gt(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)}function dt(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(e.length!==4&&e.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(t=>{if(!K(t))throw new Error("bbox must only contain numbers")})}function mt(e){if(!e)throw new Error("id is required");if(["string","number"].indexOf(typeof e)===-1)throw new Error("id must be a number or a string")}function x(e,t,n={}){var r=T(e),o=T(t),i=L(o[1]-r[1]),l=L(o[0]-r[0]),s=L(r[1]),a=L(o[1]),c=Math.pow(Math.sin(i/2),2)+Math.pow(Math.sin(l/2),2)*Math.cos(s)*Math.cos(a);return te(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),n.units)}var N=x;function $(e,t,n){if(e!==null)for(var r,o,i,l,s,a,c,u=0,p=0,h,g=e.type,d=g==="FeatureCollection",y=g==="Feature",P=d?e.features.length:1,m=0;m<P;m++){c=d?e.features[m].geometry:y?e.geometry:e,h=c?c.type==="GeometryCollection":!1,s=h?c.geometries.length:1;for(var E=0;E<s;E++){var S=0,b=0;if(l=h?c.geometries[E]:c,l!==null){a=l.coordinates;var v=l.type;switch(u=n&&(v==="Polygon"||v==="MultiPolygon")?1:0,v){case null:break;case"Point":if(t(a,p,m,S,b)===!1)return!1;p++,S++;break;case"LineString":case"MultiPoint":for(r=0;r<a.length;r++){if(t(a[r],p,m,S,b)===!1)return!1;p++,v==="MultiPoint"&&S++}v==="LineString"&&S++;break;case"Polygon":case"MultiLineString":for(r=0;r<a.length;r++){for(o=0;o<a[r].length-u;o++){if(t(a[r][o],p,m,S,b)===!1)return!1;p++}v==="MultiLineString"&&S++,v==="Polygon"&&b++}v==="Polygon"&&S++;break;case"MultiPolygon":for(r=0;r<a.length;r++){for(b=0,o=0;o<a[r].length;o++){for(i=0;i<a[r][o].length-u;i++){if(t(a[r][o][i],p,m,S,b)===!1)return!1;p++}b++}S++}break;case"GeometryCollection":for(r=0;r<l.geometries.length;r++)if($(l.geometries[r],t,n)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function yt(e,t,n,r){var o=n;return $(e,function(i,l,s,a,c){l===0&&n===void 0?o=i:o=t(o,i,l,s,a,c)},r),o}function Ee(e,t){var n;switch(e.type){case"FeatureCollection":for(n=0;n<e.features.length&&t(e.features[n].properties,n)!==!1;n++);break;case"Feature":t(e.properties,0);break}}function vt(e,t,n){var r=n;return Ee(e,function(o,i){i===0&&n===void 0?r=o:r=t(r,o,i)}),r}function be(e,t){if(e.type==="Feature")t(e,0);else if(e.type==="FeatureCollection")for(var n=0;n<e.features.length&&t(e.features[n],n)!==!1;n++);}function wt(e,t,n){var r=n;return be(e,function(o,i){i===0&&n===void 0?r=o:r=t(r,o,i)}),r}function Et(e){var t=[];return $(e,function(n){t.push(n)}),t}function ne(e,t){var n,r,o,i,l,s,a,c,u,p,h=0,g=e.type==="FeatureCollection",d=e.type==="Feature",y=g?e.features.length:1;for(n=0;n<y;n++){for(s=g?e.features[n].geometry:d?e.geometry:e,c=g?e.features[n].properties:d?e.properties:{},u=g?e.features[n].bbox:d?e.bbox:void 0,p=g?e.features[n].id:d?e.id:void 0,a=s?s.type==="GeometryCollection":!1,l=a?s.geometries.length:1,o=0;o<l;o++){if(i=a?s.geometries[o]:s,i===null){if(t(null,h,c,u,p)===!1)return!1;continue}switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(i,h,c,u,p)===!1)return!1;break}case"GeometryCollection":{for(r=0;r<i.geometries.length;r++)if(t(i.geometries[r],h,c,u,p)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}h++}}function bt(e,t,n){var r=n;return ne(e,function(o,i,l,s,a){i===0&&n===void 0?r=o:r=t(r,o,i,l,s,a)}),r}function B(e,t){ne(e,function(n,r,o,i,l){var s=n===null?null:n.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return t(k(n,o,{bbox:i,id:l}),r,0)===!1?!1:void 0}var a;switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon";break}for(var c=0;c<n.coordinates.length;c++){var u=n.coordinates[c],p={type:a,coordinates:u};if(t(k(p,o),r,c)===!1)return!1}})}function Pt(e,t,n){var r=n;return B(e,function(o,i,l){i===0&&l===0&&n===void 0?r=o:r=t(r,o,i,l)}),r}function Pe(e,t){B(e,function(n,r,o){var i=0;if(n.geometry){var l=n.geometry.type;if(!(l==="Point"||l==="MultiPoint")){var s,a=0,c=0,u=0;if($(n,function(p,h,g,d,y){if(s===void 0||r>a||d>c||y>u){s=p,a=r,c=d,u=y,i=0;return}var P=O([s,p],n.properties);if(t(P,r,o,y,i)===!1)return!1;i++,s=p})===!1)return!1}}})}function Se(e,t,n){var r=n,o=!1;return Pe(e,function(i,l,s,a,c){o===!1&&n===void 0?r=i:r=t(r,i,l,s,a,c),o=!0}),r}function Me(e,t){if(!e)throw new Error("geojson is required");B(e,function(n,r,o){if(n.geometry!==null){var i=n.geometry.type,l=n.geometry.coordinates;switch(i){case"LineString":if(t(n,r,o,0,0)===!1)return!1;break;case"Polygon":for(var s=0;s<l.length;s++)if(t(lineString(l[s],n.properties),r,o,s)===!1)return!1;break}}})}function St(e,t,n){var r=n;return Me(e,function(o,i,l,s){i===0&&n===void 0?r=o:r=t(r,o,i,l,s)}),r}function Mt(e,t){if(t=t||{},!isObject(t))throw new Error("options is invalid");var n=t.featureIndex||0,r=t.multiFeatureIndex||0,o=t.geometryIndex||0,i=t.segmentIndex||0,l=t.properties,s;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,s=e.features[n].geometry;break;case"Feature":l=l||e.properties,s=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":s=e;break;default:throw new Error("geojson is invalid")}if(s===null)return null;var a=s.coordinates;switch(s.type){case"Point":case"MultiPoint":return null;case"LineString":return i<0&&(i=a.length+i-1),lineString([a[i],a[i+1]],l,t);case"Polygon":return o<0&&(o=a.length+o),i<0&&(i=a[o].length+i-1),lineString([a[o][i],a[o][i+1]],l,t);case"MultiLineString":return r<0&&(r=a.length+r),i<0&&(i=a[r].length+i-1),lineString([a[r][i],a[r][i+1]],l,t);case"MultiPolygon":return r<0&&(r=a.length+r),o<0&&(o=a[r].length+o),i<0&&(i=a[r][o].length-i-1),lineString([a[r][o][i],a[r][o][i+1]],l,t)}throw new Error("geojson is invalid")}function kt(e,t){if(t=t||{},!isObject(t))throw new Error("options is invalid");var n=t.featureIndex||0,r=t.multiFeatureIndex||0,o=t.geometryIndex||0,i=t.coordIndex||0,l=t.properties,s;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,s=e.features[n].geometry;break;case"Feature":l=l||e.properties,s=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":s=e;break;default:throw new Error("geojson is invalid")}if(s===null)return null;var a=s.coordinates;switch(s.type){case"Point":return point(a,l,t);case"MultiPoint":return r<0&&(r=a.length+r),point(a[r],l,t);case"LineString":return i<0&&(i=a.length+i),point(a[i],l,t);case"Polygon":return o<0&&(o=a.length+o),i<0&&(i=a[o].length+i),point(a[o][i],l,t);case"MultiLineString":return r<0&&(r=a.length+r),i<0&&(i=a[r].length+i),point(a[r][i],l,t);case"MultiPolygon":return r<0&&(r=a.length+r),o<0&&(o=a[r].length+o),i<0&&(i=a[r][o].length-i),point(a[r][o][i],l,t)}throw new Error("geojson is invalid")}function ke(e,t={}){return Se(e,(n,r)=>{const o=r.geometry.coordinates;return n+x(o[0],o[1],t)},0)}var Le=ke;function re(e,t,n={}){if(n.final===!0)return Ie(e,t);const r=T(e),o=T(t),i=L(r[0]),l=L(o[0]),s=L(r[1]),a=L(o[1]),c=Math.sin(l-i)*Math.cos(a),u=Math.cos(s)*Math.sin(a)-Math.sin(s)*Math.cos(a)*Math.cos(l-i);return G(Math.atan2(c,u))}function Ie(e,t){let n=re(t,e);return n=(n+180)%360,n}var Lt=null;function oe(e,t,n,r={}){const o=T(e),i=L(o[0]),l=L(o[1]),s=L(n),a=U(t,r.units),c=Math.asin(Math.sin(l)*Math.cos(a)+Math.cos(l)*Math.sin(a)*Math.cos(s)),u=i+Math.atan2(Math.sin(s)*Math.sin(a)*Math.cos(l),Math.cos(a)-Math.sin(l)*Math.sin(c)),p=G(u),h=G(c);return w([p,h],r.properties)}var It=null;class ie{constructor(t=[],n=xe){if(this.data=t,this.length=this.data.length,this.compare=n,this.length>0)for(let r=(this.length>>1)-1;r>=0;r--)this._down(r)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(this.length===0)return;const t=this.data[0],n=this.data.pop();return this.length--,this.length>0&&(this.data[0]=n,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:n,compare:r}=this,o=n[t];for(;t>0;){const i=t-1>>1,l=n[i];if(r(o,l)>=0)break;n[t]=l,t=i}n[t]=o}_down(t){const{data:n,compare:r}=this,o=this.length>>1,i=n[t];for(;t<o;){let l=(t<<1)+1,s=n[l];const a=l+1;if(a<this.length&&r(n[a],s)<0&&(l=a,s=n[a]),r(s,i)>=0)break;n[t]=s,t=l}n[t]=i}}function xe(e,t){return e<t?-1:e>t?1:0}function ae(e,t){return e.p.x>t.p.x?1:e.p.x<t.p.x?-1:e.p.y!==t.p.y?e.p.y>t.p.y?1:-1:1}function _e(e,t){return e.rightSweepEvent.p.x>t.rightSweepEvent.p.x?1:e.rightSweepEvent.p.x<t.rightSweepEvent.p.x?-1:e.rightSweepEvent.p.y!==t.rightSweepEvent.p.y?e.rightSweepEvent.p.y<t.rightSweepEvent.p.y?1:-1:1}class se{constructor(t,n,r,o){this.p={x:t[0],y:t[1]},this.featureId=n,this.ringId=r,this.eventId=o,this.otherEvent=null,this.isLeftEndpoint=null}isSamePoint(t){return this.p.x===t.p.x&&this.p.y===t.p.y}}function Ce(e,t){if(e.type==="FeatureCollection"){const n=e.features;for(let r=0;r<n.length;r++)le(n[r],t)}else le(e,t)}let q=0,R=0,z=0;function le(e,t){const n=e.type==="Feature"?e.geometry:e;let r=n.coordinates;(n.type==="Polygon"||n.type==="MultiLineString")&&(r=[r]),n.type==="LineString"&&(r=[[r]]);for(let o=0;o<r.length;o++)for(let i=0;i<r[o].length;i++){let l=r[o][i][0],s=null;R=R+1;for(let a=0;a<r[o][i].length-1;a++){s=r[o][i][a+1];const c=new se(l,q,R,z),u=new se(s,q,R,z+1);c.otherEvent=u,u.otherEvent=c,ae(c,u)>0?(u.isLeftEndpoint=!0,c.isLeftEndpoint=!1):(c.isLeftEndpoint=!0,u.isLeftEndpoint=!1),t.push(c),t.push(u),l=s,z=z+1}}q=q+1}class Fe{constructor(t){this.leftSweepEvent=t,this.rightSweepEvent=t.otherEvent}}function Te(e,t){if(e===null||t===null||e.leftSweepEvent.ringId===t.leftSweepEvent.ringId&&(e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.rightSweepEvent)||e.leftSweepEvent.isSamePoint(t.leftSweepEvent)||e.leftSweepEvent.isSamePoint(t.rightSweepEvent)))return!1;const n=e.leftSweepEvent.p.x,r=e.leftSweepEvent.p.y,o=e.rightSweepEvent.p.x,i=e.rightSweepEvent.p.y,l=t.leftSweepEvent.p.x,s=t.leftSweepEvent.p.y,a=t.rightSweepEvent.p.x,c=t.rightSweepEvent.p.y,u=(c-s)*(o-n)-(a-l)*(i-r),p=(a-l)*(r-s)-(c-s)*(n-l),h=(o-n)*(r-s)-(i-r)*(n-l);if(u===0)return!1;const g=p/u,d=h/u;if(g>=0&&g<=1&&d>=0&&d<=1){const y=n+g*(o-n),P=r+g*(i-r);return[y,P]}return!1}function Oe(e,t){t=t||!1;const n=[],r=new ie([],_e);for(;e.length;){const o=e.pop();if(o.isLeftEndpoint){const i=new Fe(o);for(let l=0;l<r.data.length;l++){const s=r.data[l];if(t&&s.leftSweepEvent.featureId===o.featureId)continue;const a=Te(i,s);a!==!1&&n.push(a)}r.push(i)}else o.isLeftEndpoint===!1&&r.pop()}return n}function Ae(e,t){const n=new ie([],ae);return Ce(e,n),Oe(n,t)}var De=Ae;function Ge(e,t,n={}){const{removeDuplicates:r=!0,ignoreSelfIntersections:o=!1}=n;let i=[];e.type==="FeatureCollection"?i=i.concat(e.features):e.type==="Feature"?i.push(e):(e.type==="LineString"||e.type==="Polygon"||e.type==="MultiLineString"||e.type==="MultiPolygon")&&i.push(k(e)),t.type==="FeatureCollection"?i=i.concat(t.features):t.type==="Feature"?i.push(t):(t.type==="LineString"||t.type==="Polygon"||t.type==="MultiLineString"||t.type==="MultiPolygon")&&i.push(k(t));const l=De(A(i),o);let s=[];if(r){const a={};l.forEach(c=>{const u=c.join(",");a[u]||(a[u]=!0,s.push(c))})}else s=l;return A(s.map(a=>w(a)))}var _t=null,Ne=Object.defineProperty,$e=Object.defineProperties,Be=Object.getOwnPropertyDescriptors,ce=Object.getOwnPropertySymbols,qe=Object.prototype.hasOwnProperty,Re=Object.prototype.propertyIsEnumerable,ue=(e,t,n)=>t in e?Ne(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,_=(e,t)=>{for(var n in t||(t={}))qe.call(t,n)&&ue(e,n,t[n]);if(ce)for(var n of ce(t))Re.call(t,n)&&ue(e,n,t[n]);return e},C=(e,t)=>$e(e,Be(t));function ze(e,t,n={}){if(!e||!t)throw new Error("lines and pt are required arguments");let r=w([1/0,1/0],{dist:1/0,index:-1,multiFeatureIndex:-1,location:-1}),o=0;return B(e,function(i,l,s){const a=de(i);for(let c=0;c<a.length-1;c++){const u=w(a[c]);u.properties.dist=x(t,u,n);const p=w(a[c+1]);p.properties.dist=x(t,p,n);const h=x(u,p,n),g=Math.max(u.properties.dist,p.properties.dist),d=re(u,p),y=oe(t,g,d+90,n),P=oe(t,g,d-90,n),m=Ge(O([y.geometry.coordinates,P.geometry.coordinates]),O([u.geometry.coordinates,p.geometry.coordinates]));let E;m.features.length>0&&m.features[0]&&(E=C(_({},m.features[0]),{properties:{dist:x(t,m.features[0],n),multiFeatureIndex:s,location:o+x(u,m.features[0],n)}})),u.properties.dist<r.properties.dist&&(r=C(_({},u),{properties:C(_({},u.properties),{index:c,multiFeatureIndex:s,location:o})})),p.properties.dist<r.properties.dist&&(r=C(_({},p),{properties:C(_({},p.properties),{index:c+1,multiFeatureIndex:s,location:o+h})})),E&&E.properties.dist<r.properties.dist&&(r=C(_({},E),{properties:C(_({},E.properties),{index:c})})),o+=h}}),r}var fe=ze;function He(){f.loadImage("./Images/wilderness.png",function(e,t){if(e)throw e;f.hasImage("boundary")||f.addImage("boundary",t)}),f.loadImage("./Images/pass.png",function(e,t){if(e)throw e;f.hasImage("pass")||f.addImage("pass",t)}),f.loadImage("./Images/pass.png",function(e,t){if(e)throw e;f.hasImage("summit")||f.addImage("summit",t)}),f.loadImage("./Images/flag.png",function(e,t){if(e)throw e;f.hasImage("flag")||f.addImage("flag",t)}),f.loadImage("./Images/junction.png",function(e,t){if(e)throw e;f.hasImage("junction")||f.addImage("junction",t)})}function X(e){return D?e.toFixed(2)+" km":(e*.621371).toFixed(2)+" miles"}function V(e){return D?e.toFixed(2)+" m":(e*3.28084).toFixed(2)+" ft"}function Je(e,t,n){const r=e.features[0].geometry.coordinates;if(!t||!t.properties||typeof t.properties.index=="undefined")return console.error("Invalid nearestPoint data:",t),{distanceToPoint:0,elevationToPoint:0};const o=t.properties.index;let i=0,l=0;if(n==="counterclockwise"){for(let s=0;s<=o;s++)if(s>0){const a=N(w(r[s-1]),w(r[s]),{units:"kilometers"});i+=a;const c=r[s][2]-r[s-1][2];c>0&&(l+=c)}}else for(let s=r.length-1;s>=o;s--)if(s<r.length-1){const a=N(w(r[s]),w(r[s+1]),{units:"kilometers"});i+=a;const c=r[s-1][2]-r[s][2];c>0&&(l+=c)}return{distanceToPoint:i,elevationToPoint:l}}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("unitSwitch"),t=document.getElementById("unitLabel"),n=document.getElementById("mapStyleSelect"),r=30*60*1e3,o=setInterval(()=>{window.mainMap&&(clearInterval(o),l())},100);e.addEventListener("change",function(){D=!e.checked;const c=e.checked?"miles":"km";i("unit",c),t.textContent=e.checked?"Miles":"Km",a()}),n.addEventListener("change",function(){const c=n.value;i("mapStyle",c),W(c)});function i(c,u){const p=new Date().getTime(),h={value:u,timestamp:p};localStorage.setItem(c,JSON.stringify(h))}function l(){const c=JSON.parse(localStorage.getItem("unit"));c&&s(c.timestamp)&&(e.checked=c.value==="miles",D=c.value!=="miles",t.textContent=e.checked?"Miles":"Km");const u=JSON.parse(localStorage.getItem("mapStyle"));u&&s(u.timestamp)?(n.value=u.value,W(u.value)):W("default")}function s(c){return new Date().getTime()-c<r}function a(){I.forEach(c=>{if(c&&c.track&&c.geojson){const{popup:u,geojson:p,track:h,nearestPoint:g}=c,d=h.selectedDirection||"clockwise";u&&J(u,p,g,d,h)}else console.error("Invalid popupEntry found in popupdata:",c)})}});function H(e,t){const n=document.getElementById("toggles-bar");n.style.backgroundColor=e==="black"?"rgba(0, 0, 0, 0.8)":"rgba(255, 255, 255, 0.8)",n.style.color=t,n.querySelectorAll("label, span, select").forEach(o=>{o.style.color=t})}function W(e){if(!f){console.error("Map is not initialized");return}switch(e){case"light":f.setStyle("mapbox://styles/mapbox/light-v10"),H("black","white");break;case"dark":f.setStyle("mapbox://styles/mapbox/dark-v10"),H("white","black");break;case"satellite":f.setStyle("mapbox://styles/mapbox/satellite-v9"),H("white","black");break;default:f.setStyle("mapbox://styles/mapbox/outdoors-v12"),H("black","white")}f.once("style.load",function(){Ue()})}function Ue(){He(),fetch("Tracks/tracks.json").then(e=>e.json()).then(e=>Promise.all(e.map((t,n)=>Y(t.url).then(r=>(t.pois=r,{track:t,index:n}))))).then(e=>{e.forEach(({track:t,index:n})=>{Q([t],n)})}).catch(e=>console.error("Error loading tracks file:",e))}function Ke(e,t,n,r,o,i){e.off("click",t),e.on("click",t,function(l){const s=w([l.lngLat.lng,l.lngLat.lat]),c=fe(n.features[0],s,{units:"kilometers"}).properties.index,u=n.features[0].geometry.coordinates;let p=0,h=0;for(let m=0;m<=c;m++)if(m>0){const E=N(w(u[m-1]),w(u[m]),{units:"kilometers"});p+=E;const S=u[m][2]-u[m-1][2];S>0&&(h+=S)}const g=p,d=h,y=`
            <strong>${r.name}</strong><br>
            Distance to Point: ${X(g)}<br>
            Elevation Gain: ${V(d)}
        `,P=new mapboxgl.Popup().setLngLat(l.lngLat).setHTML(y).addTo(e);I.push({popup:P,geojson:n,track:r,outAndBackDistance:g,outAndBackElevationGain:d}),P.on("close",function(){const m=I.findIndex(E=>E.popup===P);m!==-1&&I.splice(m,1)})})}function J(e,t,n,r,o){if(o.type==="loop"){const{distanceToPoint:i,elevationToPoint:l}=Je(t,n,r),s=X(i),a=V(l),c=`
            <strong>${o.name}</strong><br>
            Distance to Point: ${s}<br>
            Elevation Gain to Point: ${a}<br>
            <label>Direction: 
                <select id="directionToggle">
                    <option value="clockwise" ${r==="clockwise"?"selected":""}>Clockwise</option>
                    <option value="counterclockwise" ${r==="counterclockwise"?"selected":""}>Counterclockwise</option>
                </select>
            </label>
        `;e.setHTML(c);const u=document.getElementById("directionToggle");u&&u.addEventListener("change",function(){o.selectedDirection=this.value,J(e,t,n,o.selectedDirection,o)})}else if(o.type==="direct"){const i=t.features[0].geometry.coordinates;let l=0,s=0;for(let g=1;g<i.length;g++){const d=N(w(i[g-1]),w(i[g]),{units:"kilometers"});l+=d;const y=i[g][2]-i[g-1][2];y>0&&(s+=y)}const a=l,c=s,u=X(a),p=V(c),h=`
            <strong>${o.name}</strong><br>
            Distance to point: ${u}<br>
            Elevation Gain to point: ${p}
        `;e.setHTML(h)}}function Xe(e,t,n,r,o,i){e.off("click",t),e.on("click",t,function(l){if(e.queryRenderedFeatures(l.point,{layers:[t]}).length===0)return;const a=w([l.lngLat.lng,l.lngLat.lat]),c=fe(n.features[0],a,{units:"kilometers"}),u=c.properties.index,p=n.features[0].geometry.coordinates[u][2],h=new mapboxgl.Popup().setLngLat(l.lngLat).setHTML("").addTo(e);J(h,n,c,r.selectedDirection,r);const g={layerId:t,popup:h,geojson:n,nearestPoint:c,updateContent:function(){J(h,n,c,r.selectedDirection,r)}};I.push(g),h.on("close",function(){const d=I.findIndex(y=>y.popup===h);d!==-1&&I.splice(d,1)})})}function Ve(e,t){e.on("click",t,function(n){const r=n.features[0],o=r.geometry.coordinates.slice(),i=r.properties.name,l=r.properties.description||"No description available",s=r.properties.image||"";let a=`
            <strong>${i}</strong><br>
            ${l}
        `;s&&(a+=`<br><img src="${s}" alt="${i}" id="poi-img">`);const c=new mapboxgl.Popup().setLngLat(o).setHTML(a).addTo(e)}),e.on("mouseenter",t,function(){e.getCanvas().style.cursor="pointer"}),e.on("mouseleave",t,function(){e.getCanvas().style.cursor=""})}var pe=(e,t,n)=>new Promise((r,o)=>{var i=a=>{try{s(n.next(a))}catch(c){o(c)}},l=a=>{try{s(n.throw(a))}catch(c){o(c)}},s=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,l);s((n=n.apply(e,t)).next())});let D=!0,I=[],f=null;function Ct(){fetch("/google-tag").then(e=>{if(!e.ok)throw new Error("Failed to fetch Google Tag snippet");return e.text()}).then(e=>{const t=document.createElement("div");t.innerHTML=e,document.head.appendChild(t.querySelector("script"))}).catch(e=>console.error("Error loading Google Tag:",e))}fetch("/mapbox-token").then(e=>e.json()).then(e=>{mapboxgl.accessToken=e.accessToken,f=new mapboxgl.Map({container:"map",center:[-105.6129,39.99366],zoom:10,style:"mapbox://styles/mapbox/outdoors-v12"}),f.on("load",()=>pe(void 0,null,function*(){try{yield We(),Qe()}catch(t){console.error("Error during map initialization:",t)}}))}).catch(e=>{console.error("Error fetching Mapbox access token:",e)});function We(){return pe(this,null,function*(){const e=[{url:"./Images/wilderness.png",name:"boundary"},{url:"./Images/pass.png",name:"pass"},{url:"./Images/pass.png",name:"summit"},{url:"./Images/flag.png",name:"flag"},{url:"./Images/junction.png",name:"junction"}];for(const t of e)yield new Promise((n,r)=>{f.loadImage(t.url,(o,i)=>{o?(console.error(`Error loading image: ${t.url}`,o),r(o)):(f.addImage(t.name,i),n())})})})}function Q(e,t){e.forEach(n=>{fetch(n.url).then(r=>r.text()).then(r=>{var o,i;const s=new DOMParser().parseFromString(r,"application/xml"),a=toGeoJSON.gpx(s),c=((i=(o=a.features[0])==null?void 0:o.properties)==null?void 0:i.name)||`Unnamed Track ${t+1}`;n.name=c;const u=a.features.filter(b=>b.geometry.type!=="Point"),p=`gpxTrack${t}`,h=`gpxTrackLine${t}`,g=`gpxTrackPOIsSource${t}`,d=`gpxTrackPOIs${t}`,y=`gpxTrackName${t}`;f.getSource(p)&&(f.removeLayer(h),f.removeSource(p)),f.getSource(g)&&(f.removeLayer(d),f.removeSource(g)),f.addSource(p,{type:"geojson",data:{type:"FeatureCollection",features:u}}),f.addLayer({id:h,type:"line",source:p,layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#c3002f","line-width":3}});let P=Le(a,{units:"kilometers"}),m=0;const E=u[0].geometry.coordinates;for(let b=1;b<E.length;b++){const v=E[b-1][2],he=E[b][2];he>v&&(m+=he-v)}if(n.pois&&n.pois.length>0){const b=n.pois.map(v=>({type:"Feature",geometry:{type:"Point",coordinates:[v.lng,v.lat]},properties:{name:v.name,icon:v.icon,description:v.description,image:v.image,weight:Ye(v.icon)}}));f.addSource(g,{type:"geojson",data:{type:"FeatureCollection",features:b}}),f.addLayer({id:d,type:"symbol",source:g,layout:{"icon-image":["get","icon"],"icon-size":.15,"icon-allow-overlap":!0,"text-field":["get","name"],"text-font":["Open Sans Bold","Arial Unicode MS Bold"],"text-offset":[0,1],"text-anchor":"top","symbol-sort-key":["get","weight"]},paint:{"text-color":"#666666","text-halo-color":"white","text-halo-width":1}})}Ve(f,d),n.type==="loop"?Xe(f,h,a,n,P,m):Ke(f,h,a,n,P,m);const S={layerId:h,geojson:a,track:n,distance:P,totalElevationGain:m,popup:null,updateContent:function(){this.popup&&updatePopupContent(this.popup,this.geojson,this.track,this.track.selectedDirection)}};I.push(S),f.on("mouseenter",h,function(){f.getCanvas().style.cursor="pointer"}),f.on("mouseenter",d,function(){f.getCanvas().style.cursor="pointer"}),f.on("mouseenter",y,function(){f.getCanvas().style.cursor="pointer"}),f.on("mouseleave",h,function(){f.getCanvas().style.cursor=""}),f.on("mouseleave",d,function(){f.getCanvas().style.cursor=""}),f.on("mouseleave",y,function(){f.getCanvas().style.cursor=""})}).catch(r=>console.log("Error loading GPX track: ",r))})}function Qe(){if(!f){console.error("Map is not initialized");return}fetch("Tracks/tracks.json").then(e=>{if(!e.ok)throw new Error(`Failed to fetch tracks.json: ${e.statusText}`);return e.json()}).then(e=>Promise.all(e.map((t,n)=>Y(t.url).then(r=>(t.pois=r,{track:t,index:n}))))).then(e=>{e.forEach(({track:t,index:n})=>{Q([t],n)})}).catch(e=>console.error("Error loading tracks file:",e))}function Y(e){const n=`Tracks/${e.split("/").slice(-1)[0].replace(".gpx","")}/poi.txt`;return fetch(n).then(r=>r.text()).then(r=>{try{return JSON.parse(r)}catch(o){return console.error("Error parsing POI data:",o),[]}}).catch(r=>(console.error("Error loading POI file:",r),[]))}function Ye(e){return{flag:100,summit:100,boundary:50,pass:40,junction:10}[e]||0}})();})();
