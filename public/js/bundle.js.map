{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://community-treks/./node_modules/@turf/invariant/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/helpers/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/distance/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/meta/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/length/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/bearing/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/destination/dist/esm/index.js","webpack://community-treks/./node_modules/sweepline-intersections/dist/sweeplineIntersections.esm.js","webpack://community-treks/./node_modules/@turf/line-intersect/dist/esm/index.js","webpack://community-treks/./node_modules/@turf/nearest-point-on-line/dist/esm/index.js","webpack://community-treks/./src/js/interactions.js","webpack://community-treks/./src/js/calculations.js","webpack://community-treks/./src/js/map-setup.js"],"sourcesContent":["// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 0)\n    return angle > 180 ? angle - 360 : angle;\n  return angle < -180 ? angle + 360 : angle;\n}\nfunction radiansToDegrees(radians) {\n  const degrees = radians % (2 * Math.PI);\n  return degrees * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const radians = degrees % 360;\n  return radians * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null)\n    return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null)\n        continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\")\n              multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\")\n            multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\")\n              multiFeatureIndex++;\n            if (geomType === \"Polygon\")\n              geometryIndex++;\n          }\n          if (geomType === \"Polygon\")\n            multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false)\n          break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false)\n        break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else\n      previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry)\n      return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\")\n      return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson)\n    throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null)\n      return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options))\n    throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null)\n    return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0)\n        segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0)\n        geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options))\n    throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null)\n    return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0)\n        coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0)\n        geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { distance } from \"@turf/distance\";\nimport { segmentReduce } from \"@turf/meta\";\nfunction length(geojson, options = {}) {\n  return segmentReduce(\n    geojson,\n    (previousValue, segment) => {\n      const coords = segment.geometry.coordinates;\n      return previousValue + distance(coords[0], coords[1], options);\n    },\n    0\n  );\n}\nvar turf_length_default = length;\nexport {\n  turf_length_default as default,\n  length\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction bearing(start, end, options = {}) {\n  if (options.final === true) {\n    return calculateFinalBearing(start, end);\n  }\n  const coordinates1 = getCoord(start);\n  const coordinates2 = getCoord(end);\n  const lon1 = degreesToRadians(coordinates1[0]);\n  const lon2 = degreesToRadians(coordinates2[0]);\n  const lat1 = degreesToRadians(coordinates1[1]);\n  const lat2 = degreesToRadians(coordinates2[1]);\n  const a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n  const b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n  return radiansToDegrees(Math.atan2(a, b));\n}\nfunction calculateFinalBearing(start, end) {\n  let bear = bearing(end, start);\n  bear = (bear + 180) % 360;\n  return bear;\n}\nvar turf_bearing_default = bearing;\nexport {\n  bearing,\n  turf_bearing_default as default\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport {\n  degreesToRadians,\n  lengthToRadians,\n  point,\n  radiansToDegrees\n} from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction destination(origin, distance, bearing, options = {}) {\n  const coordinates1 = getCoord(origin);\n  const longitude1 = degreesToRadians(coordinates1[0]);\n  const latitude1 = degreesToRadians(coordinates1[1]);\n  const bearingRad = degreesToRadians(bearing);\n  const radians = lengthToRadians(distance, options.units);\n  const latitude2 = Math.asin(\n    Math.sin(latitude1) * Math.cos(radians) + Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad)\n  );\n  const longitude2 = longitude1 + Math.atan2(\n    Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1),\n    Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2)\n  );\n  const lng = radiansToDegrees(longitude2);\n  const lat = radiansToDegrees(latitude2);\n  return point([lng, lat], options.properties);\n}\nvar turf_destination_default = destination;\nexport {\n  turf_destination_default as default,\n  destination\n};\n//# sourceMappingURL=index.js.map","class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction checkWhichEventIsLeft (e1, e2) {\n    if (e1.p.x > e2.p.x) return 1\n    if (e1.p.x < e2.p.x) return -1\n\n    if (e1.p.y !== e2.p.y) return e1.p.y > e2.p.y ? 1 : -1\n    return 1\n}\n\nfunction checkWhichSegmentHasRightEndpointFirst (seg1, seg2) {\n    if (seg1.rightSweepEvent.p.x > seg2.rightSweepEvent.p.x) return 1\n    if (seg1.rightSweepEvent.p.x < seg2.rightSweepEvent.p.x) return -1\n\n    if (seg1.rightSweepEvent.p.y !== seg2.rightSweepEvent.p.y) return seg1.rightSweepEvent.p.y < seg2.rightSweepEvent.p.y ? 1 : -1\n    return 1\n}\n\nclass Event {\n\n    constructor (p, featureId, ringId, eventId) {\n        this.p = {\n            x: p[0],\n            y: p[1]\n        };\n        this.featureId = featureId;\n        this.ringId = ringId;\n        this.eventId = eventId;\n\n        this.otherEvent = null;\n        this.isLeftEndpoint = null;\n    }\n\n    isSamePoint (eventToCheck) {\n        return this.p.x === eventToCheck.p.x && this.p.y === eventToCheck.p.y\n    }\n}\n\nfunction fillEventQueue (geojson, eventQueue) {\n    if (geojson.type === 'FeatureCollection') {\n        const features = geojson.features;\n        for (let i = 0; i < features.length; i++) {\n            processFeature(features[i], eventQueue);\n        }\n    } else {\n        processFeature(geojson, eventQueue);\n    }\n}\n\nlet featureId = 0;\nlet ringId = 0;\nlet eventId = 0;\nfunction processFeature (featureOrGeometry, eventQueue) {\n    const geom = featureOrGeometry.type === 'Feature' ? featureOrGeometry.geometry : featureOrGeometry;\n    let coords = geom.coordinates;\n    // standardise the input\n    if (geom.type === 'Polygon' || geom.type === 'MultiLineString') coords = [coords];\n    if (geom.type === 'LineString') coords = [[coords]];\n\n    for (let i = 0; i < coords.length; i++) {\n        for (let ii = 0; ii < coords[i].length; ii++) {\n            let currentP = coords[i][ii][0];\n            let nextP = null;\n            ringId = ringId + 1;\n            for (let iii = 0; iii < coords[i][ii].length - 1; iii++) {\n                nextP = coords[i][ii][iii + 1];\n\n                const e1 = new Event(currentP, featureId, ringId, eventId);\n                const e2 = new Event(nextP, featureId, ringId, eventId + 1);\n\n                e1.otherEvent = e2;\n                e2.otherEvent = e1;\n\n                if (checkWhichEventIsLeft(e1, e2) > 0) {\n                    e2.isLeftEndpoint = true;\n                    e1.isLeftEndpoint = false;\n                } else {\n                    e1.isLeftEndpoint = true;\n                    e2.isLeftEndpoint = false;\n                }\n                eventQueue.push(e1);\n                eventQueue.push(e2);\n\n                currentP = nextP;\n                eventId = eventId + 1;\n            }\n        }\n    }\n    featureId = featureId + 1;\n}\n\nclass Segment {\n\n    constructor (event) {\n        this.leftSweepEvent = event;\n        this.rightSweepEvent = event.otherEvent;\n    }\n}\n\nfunction testSegmentIntersect (seg1, seg2) {\n    if (seg1 === null || seg2 === null) return false\n\n    if (seg1.leftSweepEvent.ringId === seg2.leftSweepEvent.ringId &&\n        (seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.rightSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.rightSweepEvent.isSamePoint(seg2.rightSweepEvent) ||\n        seg1.leftSweepEvent.isSamePoint(seg2.leftSweepEvent) ||\n        seg1.leftSweepEvent.isSamePoint(seg2.rightSweepEvent))) return false\n\n    const x1 = seg1.leftSweepEvent.p.x;\n    const y1 = seg1.leftSweepEvent.p.y;\n    const x2 = seg1.rightSweepEvent.p.x;\n    const y2 = seg1.rightSweepEvent.p.y;\n    const x3 = seg2.leftSweepEvent.p.x;\n    const y3 = seg2.leftSweepEvent.p.y;\n    const x4 = seg2.rightSweepEvent.p.x;\n    const y4 = seg2.rightSweepEvent.p.y;\n\n    const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    const numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    const numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) return false\n        return false\n    }\n\n    const uA = numeA / denom;\n    const uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        const x = x1 + (uA * (x2 - x1));\n        const y = y1 + (uA * (y2 - y1));\n        return [x, y]\n    }\n    return false\n}\n\n// import {debugEventAndSegments, debugRemovingSegment} from './debug'\n\nfunction runCheck (eventQueue, ignoreSelfIntersections) {\n    ignoreSelfIntersections = ignoreSelfIntersections ? ignoreSelfIntersections : false;\n\n    const intersectionPoints = [];\n    const outQueue = new TinyQueue([], checkWhichSegmentHasRightEndpointFirst);\n\n    while (eventQueue.length) {\n        const event = eventQueue.pop();\n        if (event.isLeftEndpoint) {\n            // debugEventAndSegments(event.p, outQueue.data)\n            const segment = new Segment(event);\n            for (let i = 0; i < outQueue.data.length; i++) {\n                const otherSeg = outQueue.data[i];\n                if (ignoreSelfIntersections) {\n                    if (otherSeg.leftSweepEvent.featureId === event.featureId) continue\n                }\n                const intersection = testSegmentIntersect(segment, otherSeg);\n                if (intersection !== false) intersectionPoints.push(intersection);\n            }\n            outQueue.push(segment);\n        } else if (event.isLeftEndpoint === false) {\n            outQueue.pop();\n            // const seg = outQueue.pop()\n            // debugRemovingSegment(event.p, seg)\n        }\n    }\n    return intersectionPoints\n}\n\nfunction sweeplineIntersections (geojson, ignoreSelfIntersections) {\n    const eventQueue = new TinyQueue([], checkWhichEventIsLeft);\n    fillEventQueue(geojson, eventQueue);\n    return runCheck(eventQueue, ignoreSelfIntersections)\n}\n\nexport default sweeplineIntersections;\n","// index.ts\nimport { feature, featureCollection, point } from \"@turf/helpers\";\n\n// lib/sweepline-intersections-export.ts\nimport lib from \"sweepline-intersections\";\nvar sweeplineIntersections = lib;\n\n// index.ts\nfunction lineIntersect(line1, line2, options = {}) {\n  const { removeDuplicates = true, ignoreSelfIntersections = false } = options;\n  let features = [];\n  if (line1.type === \"FeatureCollection\")\n    features = features.concat(line1.features);\n  else if (line1.type === \"Feature\")\n    features.push(line1);\n  else if (line1.type === \"LineString\" || line1.type === \"Polygon\" || line1.type === \"MultiLineString\" || line1.type === \"MultiPolygon\") {\n    features.push(feature(line1));\n  }\n  if (line2.type === \"FeatureCollection\")\n    features = features.concat(line2.features);\n  else if (line2.type === \"Feature\")\n    features.push(line2);\n  else if (line2.type === \"LineString\" || line2.type === \"Polygon\" || line2.type === \"MultiLineString\" || line2.type === \"MultiPolygon\") {\n    features.push(feature(line2));\n  }\n  const intersections = sweeplineIntersections(\n    featureCollection(features),\n    ignoreSelfIntersections\n  );\n  let results = [];\n  if (removeDuplicates) {\n    const unique = {};\n    intersections.forEach((intersection) => {\n      const key = intersection.join(\",\");\n      if (!unique[key]) {\n        unique[key] = true;\n        results.push(intersection);\n      }\n    });\n  } else {\n    results = intersections;\n  }\n  return featureCollection(results.map((r) => point(r)));\n}\nvar turf_line_intersect_default = lineIntersect;\nexport {\n  turf_line_intersect_default as default,\n  lineIntersect\n};\n//# sourceMappingURL=index.js.map","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// index.ts\nimport { bearing } from \"@turf/bearing\";\nimport { distance } from \"@turf/distance\";\nimport { destination } from \"@turf/destination\";\nimport { lineIntersect as lineIntersects } from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport { point, lineString } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nfunction nearestPointOnLine(lines, pt, options = {}) {\n  if (!lines || !pt) {\n    throw new Error(\"lines and pt are required arguments\");\n  }\n  let closestPt = point([Infinity, Infinity], {\n    dist: Infinity,\n    index: -1,\n    multiFeatureIndex: -1,\n    location: -1\n  });\n  let length = 0;\n  flattenEach(\n    lines,\n    function(line, _featureIndex, multiFeatureIndex) {\n      const coords = getCoords(line);\n      for (let i = 0; i < coords.length - 1; i++) {\n        const start = point(coords[i]);\n        start.properties.dist = distance(pt, start, options);\n        const stop = point(coords[i + 1]);\n        stop.properties.dist = distance(pt, stop, options);\n        const sectionLength = distance(start, stop, options);\n        const heightDistance = Math.max(\n          start.properties.dist,\n          stop.properties.dist\n        );\n        const direction = bearing(start, stop);\n        const perpendicularPt1 = destination(\n          pt,\n          heightDistance,\n          direction + 90,\n          options\n        );\n        const perpendicularPt2 = destination(\n          pt,\n          heightDistance,\n          direction - 90,\n          options\n        );\n        const intersect = lineIntersects(\n          lineString([\n            perpendicularPt1.geometry.coordinates,\n            perpendicularPt2.geometry.coordinates\n          ]),\n          lineString([start.geometry.coordinates, stop.geometry.coordinates])\n        );\n        let intersectPt;\n        if (intersect.features.length > 0 && intersect.features[0]) {\n          intersectPt = __spreadProps(__spreadValues({}, intersect.features[0]), {\n            properties: {\n              dist: distance(pt, intersect.features[0], options),\n              multiFeatureIndex,\n              location: length + distance(start, intersect.features[0], options)\n            }\n          });\n        }\n        if (start.properties.dist < closestPt.properties.dist) {\n          closestPt = __spreadProps(__spreadValues({}, start), {\n            properties: __spreadProps(__spreadValues({}, start.properties), {\n              index: i,\n              multiFeatureIndex,\n              location: length\n            })\n          });\n        }\n        if (stop.properties.dist < closestPt.properties.dist) {\n          closestPt = __spreadProps(__spreadValues({}, stop), {\n            properties: __spreadProps(__spreadValues({}, stop.properties), {\n              index: i + 1,\n              multiFeatureIndex,\n              location: length + sectionLength\n            })\n          });\n        }\n        if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n          closestPt = __spreadProps(__spreadValues({}, intersectPt), {\n            properties: __spreadProps(__spreadValues({}, intersectPt.properties), { index: i })\n          });\n        }\n        length += sectionLength;\n      }\n    }\n  );\n  return closestPt;\n}\nvar turf_nearest_point_on_line_default = nearestPointOnLine;\nexport {\n  turf_nearest_point_on_line_default as default,\n  nearestPointOnLine\n};\n//# sourceMappingURL=index.js.map","import length from '@turf/length';\r\nimport { point } from '@turf/helpers';\r\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\r\nimport distance from '@turf/distance';\r\n\r\n\r\n// Function to handle direct or out-and-back routes\r\nfunction addOutAndBackRouteInteraction(mainMap, layerId, geojson, track, totalDistance, totalElevationGain) {\r\n    mainMap.off('click', layerId);\r\n\r\n    mainMap.on('click', layerId, function (e) {\r\n        // Find the nearest point on the route to the clicked location\r\n        const clickedPoint = point([e.lngLat.lng, e.lngLat.lat]);\r\n        const nearestPoint = nearestPointOnLine(geojson.features[0], clickedPoint, { units: 'kilometers' });\r\n        const nearestIndex = nearestPoint.properties.index;\r\n\r\n        const coordinates = geojson.features[0].geometry.coordinates;\r\n\r\n        let forwardDistance = 0;\r\n        let forwardElevationGain = 0;\r\n\r\n        // Calculate forward distance and elevation gain\r\n        for (let i = 0; i <= nearestIndex; i++) {\r\n            if (i > 0) {\r\n                const segmentDistance = distance(point(coordinates[i - 1]), point(coordinates[i]), { units: 'kilometers' });\r\n                forwardDistance += segmentDistance;\r\n\r\n                const elevationDiff = coordinates[i][2] - coordinates[i - 1][2];\r\n                if (elevationDiff > 0) {\r\n                    forwardElevationGain += elevationDiff;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Total distance and elevation gain for out-and-back\r\n        const outAndBackDistance = forwardDistance;\r\n        const outAndBackElevationGain = forwardElevationGain;\r\n\r\n        const popupContent = `\r\n            <strong>${track.name}</strong><br>\r\n            Distance to Point: ${convertDistance(outAndBackDistance)}<br>\r\n            Elevation Gain: ${convertElevation(outAndBackElevationGain)}\r\n        `;\r\n\r\n        const popup = new mapboxgl.Popup()\r\n            .setLngLat(e.lngLat)\r\n            .setHTML(popupContent)\r\n            .addTo(mainMap);\r\n\r\n        popupdata.push({ popup, geojson, track, outAndBackDistance, outAndBackElevationGain });\r\n\r\n        popup.on('close', function () {\r\n            const index = popupdata.findIndex(p => p.popup === popup);\r\n            if (index !== -1) {\r\n                popupdata.splice(index, 1);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// Function to update popups when the unit toggle is switched\r\nfunction updatePopupContent(popup, geojson, nearestPoint, direction, track) {\r\n    // Check if this is a loop or direct (out-and-back) route\r\n    if (track.type === 'loop') {\r\n        // For loop routes, calculate distance and elevation gain to the nearest point\r\n        const { distanceToPoint, elevationToPoint } = calculateDistanceAndElevation(\r\n            geojson,\r\n            nearestPoint,\r\n            direction\r\n        );\r\n\r\n        // Convert the values to the currently selected unit\r\n        const convertedDistance = convertDistance(distanceToPoint);\r\n        const convertedElevation = convertElevation(elevationToPoint);\r\n\r\n        // Update popup content for loop routes\r\n        const popupContent = `\r\n            <strong>${track.name}</strong><br>\r\n            Distance to Point: ${convertedDistance}<br>\r\n            Elevation Gain to Point: ${convertedElevation}<br>\r\n            <label>Direction: \r\n                <select id=\"directionToggle\">\r\n                    <option value=\"clockwise\" ${direction === 'clockwise' ? 'selected' : ''}>Clockwise</option>\r\n                    <option value=\"counterclockwise\" ${direction === 'counterclockwise' ? 'selected' : ''}>Counterclockwise</option>\r\n                </select>\r\n            </label>\r\n        `;\r\n\r\n        popup.setHTML(popupContent);\r\n\r\n        // Add the event listener for direction toggle\r\n        const directionToggle = document.getElementById('directionToggle');\r\n        if (directionToggle) {\r\n            directionToggle.addEventListener('change', function () {\r\n                track.selectedDirection = this.value; // Update the track's direction\r\n                updatePopupContent(popup, geojson, nearestPoint, track.selectedDirection, track); // Refresh popup\r\n            });\r\n        }\r\n\r\n    } else if (track.type === 'direct') {\r\n        // For direct (out-and-back) routes, calculate the total out-and-back distance and elevation gain\r\n        const coordinates = geojson.features[0].geometry.coordinates;\r\n\r\n        let forwardDistance = 0;\r\n        let forwardElevationGain = 0;\r\n\r\n        for (let i = 1; i < coordinates.length; i++) {\r\n            const segmentDistance = distance(\r\n                point(coordinates[i - 1]),\r\n                point(coordinates[i]),\r\n                { units: 'kilometers' }\r\n            );\r\n            forwardDistance += segmentDistance;\r\n\r\n            const elevationDiff = coordinates[i][2] - coordinates[i - 1][2];\r\n            if (elevationDiff > 0) {\r\n                forwardElevationGain += elevationDiff;\r\n            }\r\n        }\r\n\r\n        const outAndBackDistance = forwardDistance * 2;\r\n        const outAndBackElevationGain = forwardElevationGain * 2;\r\n\r\n        const convertedDistance = convertDistance(outAndBackDistance);\r\n        const convertedElevation = convertElevation(outAndBackElevationGain);\r\n\r\n        // Update popup content for direct routes\r\n        const popupContent = `\r\n            <strong>${track.name}</strong><br>\r\n            Distance to point: ${convertedDistance}<br>\r\n            Elevation Gain to point: ${convertedElevation}\r\n        `;\r\n\r\n        popup.setHTML(popupContent);\r\n    }\r\n}\r\n\r\n\r\n\r\n// Function to handle loop routes with distance and elevation calculation\r\nfunction addLoopRouteInteraction(mainMap, layerId, geojson, track, totalDistance, totalElevationGain) {\r\n    mainMap.off('click', layerId);\r\n    mainMap.on('click', layerId, function (e) {\r\n        // Prevent interference with POI clicks\r\n        const features = mainMap.queryRenderedFeatures(e.point, { layers: [layerId] });\r\n        if (features.length === 0) return;\r\n\r\n        const clickedPoint = point([e.lngLat.lng, e.lngLat.lat]);\r\n        const nearestPoint = nearestPointOnLine(geojson.features[0], clickedPoint, { units: 'kilometers' });\r\n        const nearestIndex = nearestPoint.properties.index;\r\n\r\n        const elevationAtNearestPoint = geojson.features[0].geometry.coordinates[nearestIndex][2];\r\n\r\n        const popup = new mapboxgl.Popup()\r\n            .setLngLat(e.lngLat)\r\n            .setHTML('') // Initialize with empty content\r\n            .addTo(mainMap);\r\n        \r\n        updatePopupContent(popup, geojson, nearestPoint, track.selectedDirection, track);\r\n\r\n        const popupEntry = {\r\n            layerId,\r\n            popup,\r\n            geojson,\r\n            nearestPoint,\r\n            updateContent: function () {\r\n                updatePopupContent(popup, geojson, nearestPoint, track.selectedDirection, track);\r\n            }\r\n        };\r\n        popupdata.push(popupEntry);\r\n\r\n        popup.on('close', function () {\r\n            const index = popupdata.findIndex(p => p.popup === popup);\r\n            if (index !== -1) {\r\n                popupdata.splice(index, 1);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n//-------------------POI Popups------------\r\nfunction addPOIPopupInteraction(mainMap, poiLayerId) {\r\n    mainMap.on('click', poiLayerId, function (e) {\r\n        const features = e.features[0];\r\n        const coordinates = features.geometry.coordinates.slice();\r\n        const name = features.properties.name;\r\n        const description = features.properties.description || 'No description available';\r\n        const imageUrl = features.properties.image || '';\r\n\r\n        // Create the popup content with an image if available\r\n        let popupContent = `\r\n            <strong>${name}</strong><br>\r\n            ${description}\r\n        `;\r\n\r\n        if (imageUrl) {\r\n            popupContent += `<br><img src=\"${imageUrl}\" alt=\"${name}\" style=\"width: 100%; max-width: 200px; margin-top: 10px;\">`;\r\n        }\r\n\r\n        // Create and add the popup to the map\r\n        const popup = new mapboxgl.Popup()\r\n            .setLngLat(coordinates)\r\n            .setHTML(popupContent)\r\n            .addTo(mainMap);\r\n    });\r\n\r\n    // Change the cursor to a pointer when the mouse is over the POI layer\r\n    mainMap.on('mouseenter', poiLayerId, function () {\r\n        mainMap.getCanvas().style.cursor = 'pointer';\r\n    });\r\n\r\n    // Change it back to default when leaving the POI layer\r\n    mainMap.on('mouseleave', poiLayerId, function () {\r\n        mainMap.getCanvas().style.cursor = '';\r\n    });\r\n}\r\n\r\nexport { addPOIPopupInteraction };\r\nexport { addLoopRouteInteraction };\r\nexport { addOutAndBackRouteInteraction };","import length from '@turf/length';\r\nimport { point } from '@turf/helpers';\r\nimport distance from '@turf/distance';\r\n\r\n// Function to convert distance and elevation based on the unit preference\r\nfunction convertDistance(distance) {\r\n    return isKilometers ? distance.toFixed(2) + ' km' : (distance * 0.621371).toFixed(2) + ' miles';\r\n}\r\n\r\nfunction convertElevation(elevation) {\r\n    return isKilometers ? elevation.toFixed(2) + ' m' : (elevation * 3.28084).toFixed(2) + ' ft';\r\n}\r\n\r\n\r\n// Function to calculate distance and elevation gain based on the direction and nearest point\r\nfunction calculateDistanceAndElevation(geojson, nearestPoint, direction) {\r\n    const coordinates = geojson.features[0].geometry.coordinates;\r\n\r\n    // Check if nearestPoint and its properties exist\r\n    if (!nearestPoint || !nearestPoint.properties || typeof nearestPoint.properties.index === 'undefined') {\r\n        console.error('Invalid nearestPoint data:', nearestPoint);\r\n        return { distanceToPoint: 0, elevationToPoint: 0 };\r\n    }\r\n\r\n    const nearestIndex = nearestPoint.properties.index;\r\n    let distance = 0;\r\n    let elevationGain = 0;\r\n\r\n    if (direction === 'counterclockwise') {\r\n        for (let i = 0; i <= nearestIndex; i++) {\r\n            if (i > 0) {\r\n                const segmentDistance = distance(point(coordinates[i - 1]), point(coordinates[i]), { units: 'kilometers' });\r\n                distance += segmentDistance;\r\n\r\n                const elevationDiff = coordinates[i][2] - coordinates[i - 1][2];\r\n                if (elevationDiff > 0) {\r\n                    elevationGain += elevationDiff;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = coordinates.length - 1; i >= nearestIndex; i--) {\r\n            if (i < coordinates.length - 1) {\r\n                const segmentDistance = distance(point(coordinates[i]), point(coordinates[i + 1]), { units: 'kilometers' });\r\n                distance += segmentDistance;\r\n\r\n                const elevationDiff = coordinates[i - 1][2] - coordinates[i][2];\r\n                if (elevationDiff > 0) {\r\n                    elevationGain += elevationDiff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        distanceToPoint: distance,\r\n        elevationToPoint: elevationGain\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Unit Toggle and user preferences Logic\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    const unitSwitch = document.getElementById('unitSwitch');\r\n    const unitLabel = document.getElementById('unitLabel'); // Get the label element\r\n    const mapStyleSelect = document.getElementById('mapStyleSelect');\r\n\r\n    // Set expiration time (30 minutes)\r\n    const expirationTime = 30 * 60 * 1000; // 30 minutes in milliseconds\r\n\r\n    // Wait for the map to be initialized\r\n    const waitForMap = setInterval(() => {\r\n        if (window.mainMap) {\r\n            clearInterval(waitForMap); // Stop checking once the map is initialized\r\n            loadPreferences(); // Safely load preferences after map is ready\r\n        }\r\n    }, 100); // Check every 100ms\r\n\r\n    // Event listener for the unit switch\r\n    unitSwitch.addEventListener('change', function () {\r\n        // Update the global variable based on the switch state\r\n        isKilometers = !unitSwitch.checked; // If the switch is checked, it's miles; otherwise, it's kilometers\r\n        \r\n        const unit = unitSwitch.checked ? 'miles' : 'km';\r\n        setPreference('unit', unit);\r\n\r\n        // Update the unit label based on the switch state\r\n        unitLabel.textContent = unitSwitch.checked ? 'Miles' : 'Km';\r\n\r\n        // Update all active popups\r\n        updateAllPopups();\r\n    });\r\n\r\n    // Event listener for the map style dropdown\r\n    mapStyleSelect.addEventListener('change', function () {\r\n        const selectedStyle = mapStyleSelect.value;\r\n        setPreference('mapStyle', selectedStyle);\r\n        applyMapStyle(selectedStyle);\r\n    });\r\n\r\n    // Function to set and save preferences\r\n    function setPreference(key, value) {\r\n        const currentTime = new Date().getTime();\r\n        const preference = {\r\n            value: value,\r\n            timestamp: currentTime\r\n        };\r\n        localStorage.setItem(key, JSON.stringify(preference));\r\n    }\r\n\r\n    // Function to load preferences and apply them if valid\r\n    function loadPreferences() {\r\n        // Load and validate unit preference\r\n        const unitPreference = JSON.parse(localStorage.getItem('unit'));\r\n        if (unitPreference && isValid(unitPreference.timestamp)) {\r\n            unitSwitch.checked = unitPreference.value === 'miles';\r\n            isKilometers = unitPreference.value !== 'miles';\r\n            unitLabel.textContent = unitSwitch.checked ? 'Miles' : 'Km';\r\n        }\r\n\r\n        // Load and validate map style preference\r\n        const mapStylePreference = JSON.parse(localStorage.getItem('mapStyle'));\r\n        if (mapStylePreference && isValid(mapStylePreference.timestamp)) {\r\n            mapStyleSelect.value = mapStylePreference.value;\r\n            applyMapStyle(mapStylePreference.value);\r\n        } else {\r\n            // Apply the default map style if none is set\r\n            applyMapStyle('default');\r\n        }\r\n    }\r\n\r\n    // Function to check if a stored preference is still valid\r\n    function isValid(timestamp) {\r\n        const currentTime = new Date().getTime();\r\n        return currentTime - timestamp < expirationTime;\r\n    }\r\n\r\n    // Function to update all active popups\r\n    function updateAllPopups() {\r\n        // Iterate through the popupdata array and update each popup\r\n        popupdata.forEach((popupEntry) => {\r\n            if (popupEntry && popupEntry.track && popupEntry.geojson) {\r\n                const { popup, geojson, track, nearestPoint } = popupEntry;\r\n    \r\n                // Use a default direction if none is set\r\n                const direction = track.selectedDirection || 'clockwise';\r\n    \r\n                // Ensure the popup exists before attempting to update\r\n                if (popup) {\r\n                    updatePopupContent(popup, geojson, nearestPoint, direction, track);\r\n                }\r\n            } else {\r\n                console.error(\"Invalid popupEntry found in popupdata:\", popupEntry);\r\n            }\r\n        });\r\n    }\r\n    \r\n    \r\n});\r\n\r\n\r\n// Function to update the style of the toggle bar and POI text\r\nfunction updateToggleBarStyle(backgroundColor, textColor) {\r\n    const toggleBar = document.getElementById('toggles-bar');\r\n    toggleBar.style.backgroundColor = backgroundColor === 'black' ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)';\r\n    toggleBar.style.color = textColor;\r\n\r\n    // Update the color of labels and other text elements inside the toggle bar\r\n    const labels = toggleBar.querySelectorAll('label, span, select');\r\n    labels.forEach(label => {\r\n        label.style.color = textColor;\r\n    });\r\n}\r\n\r\n\r\nfunction applyMapStyle(style) {\r\n    if (!mainMap) {\r\n        console.error('Map is not initialized');\r\n        return;\r\n    }\r\n\r\n    switch (style) {\r\n        case 'light':\r\n            mainMap.setStyle('mapbox://styles/mapbox/light-v10');\r\n            updateToggleBarStyle('black', 'white');\r\n            break;\r\n        case 'dark':\r\n            mainMap.setStyle('mapbox://styles/mapbox/dark-v10');\r\n            updateToggleBarStyle('white', 'black');\r\n            break;\r\n        case 'satellite':\r\n            mainMap.setStyle('mapbox://styles/mapbox/satellite-v9');\r\n            updateToggleBarStyle('white', 'black');\r\n            break;\r\n        default:\r\n            mainMap.setStyle('mapbox://styles/mapbox/outdoors-v12');\r\n            updateToggleBarStyle('black', 'white');\r\n    }\r\n\r\n    // After setting the style, wait for it to load before re-adding icons and layers\r\n    mainMap.once('style.load', function () {\r\n        // Reload POIs and Tracks\r\n        reloadRoutesAndPOIs();\r\n    });\r\n}\r\n\r\n// Function to reload routes and POIs after style change\r\nfunction reloadRoutesAndPOIs() {\r\n    // Reload POI icons\r\n    loadPOIIcons(); \r\n\r\n    // Fetch the tracks from the JSON file\r\n    fetch('Tracks/tracks.json')\r\n        .then(response => response.json())\r\n        .then(tracks => {\r\n            return Promise.all(\r\n                tracks.mainMap((track, index) => {\r\n                    // Load POIs for each track\r\n                    return loadPOIs(track.url).then(pois => {\r\n                        track.pois = pois; // Assign loaded POIs to the track\r\n                        return { track, index }; // Return the track along with its index\r\n                    });\r\n                })\r\n            );\r\n        })\r\n        .then(tracksWithIndices => {\r\n            // Now load each track with the preserved index\r\n            tracksWithIndices.forEach(({ track, index }) => {\r\n                loadGPXTracksWithPOIs([track], index);\r\n            });\r\n        })\r\n        .catch(error => console.error('Error loading tracks file:', error));\r\n}","import length from '@turf/length';\r\nimport { addPOIPopupInteraction } from './interactions.js';\r\nimport { addLoopRouteInteraction } from './interactions.js';\r\nimport { addOutAndBackRouteInteraction } from './interactions.js';\r\n\r\n// Global variable to track unit preference (kilometers by default)\r\nlet isKilometers = true; // This will store the user's unit preference\r\nlet isLight = true; // This will store the user's color preference\r\n\r\n// Array to store popup information for routes and POIs\r\nlet popupdata = [];\r\nlet mainMap;\r\n\r\n// Function to fetch and inject the Google Tag snippet\r\nfunction loadGoogleTag() {\r\n    fetch('/google-tag')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch Google Tag snippet');\r\n            }\r\n            return response.text();\r\n        })\r\n        .then(tagSnippet => {\r\n            // Create a container to hold the tag snippet\r\n            const container = document.createElement('div');\r\n            container.innerHTML = tagSnippet;\r\n\r\n            // Append the script(s) to the head\r\n            document.head.appendChild(container.querySelector('script'));\r\n        })\r\n        .catch(error => console.error('Error loading Google Tag:', error));\r\n}\r\n\r\n// Fetch Mapbox token and initialize map\r\nfetch('/mapbox-token')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        mapboxgl.accessToken = data.accessToken;\r\n\r\n        // Initialize the Mapbox map\r\n        mainMap = new mapboxgl.Map({\r\n            container: 'map',\r\n            center: [-105.6129, 39.99366],\r\n            zoom: 10,\r\n            style: 'mapbox://styles/mapbox/outdoors-v12',\r\n        });\r\n        //console.log('Initializing mainMap...');\r\n\r\n        // Add images after the map is loaded\r\n        mainMap.on('load', async () => {\r\n            //console.log('Map load event triggered');\r\n            try {\r\n                // Add images to the map\r\n                await addMapImages();\r\n\r\n                // call loadGPXTracks\r\n                loadGPXTracks();\r\n            } catch (error) {\r\n                console.error('Error during map initialization:', error);\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error('Error fetching Mapbox access token:', error);\r\n    });\r\n\r\n// Function to load images\r\nasync function addMapImages() {\r\n    const images = [\r\n        { url: './Images/wilderness.png', name: 'boundary' },\r\n        { url: './Images/pass.png', name: 'pass' },\r\n        { url: './Images/pass.png', name: 'summit' },\r\n        { url: './Images/flag.png', name: 'flag' },\r\n        { url: './Images/junction.png', name: 'junction' },\r\n    ];\r\n\r\n    for (const image of images) {\r\n        await new Promise((resolve, reject) => {\r\n            mainMap.loadImage(image.url, (error, loadedImage) => {\r\n                if (error) {\r\n                    console.error(`Error loading image: ${image.url}`, error);\r\n                    reject(error);\r\n                } else {\r\n                    mainMap.addImage(image.name, loadedImage);\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n// Function to load and parse the GPX file\r\nfunction loadGPXTracksWithPOIs(tracks, index) {\r\n    tracks.forEach((track) => {\r\n        fetch(track.url) \r\n            .then(response => response.text())\r\n            .then(str => {\r\n                const parser = new DOMParser();\r\n                const gpxDoc = parser.parseFromString(str, 'application/xml');\r\n                const geojson = toGeoJSON.gpx(gpxDoc);\r\n\r\n                // Try to extract the name from the first feature in GeoJSON\r\n                const trackName = geojson.features[0]?.properties?.name || `Unnamed Track ${index + 1}`;\r\n                \r\n                // Update the track's name based on the GeoJSON data if available\r\n                track.name = trackName;\r\n\r\n                // Separate POIs from track features\r\n                const trackFeatures = geojson.features.filter(feature => feature.geometry.type !== 'Point');\r\n\r\n                // Unique source and layer IDs for each GPX track\r\n                const sourceId = `gpxTrack${index}`;\r\n                const layerId = `gpxTrackLine${index}`;\r\n                const poiSourceId = `gpxTrackPOIsSource${index}`;\r\n                const poiLayerId = `gpxTrackPOIs${index}`;\r\n                const nameLayerId = `gpxTrackName${index}`;\r\n\r\n                // Remove existing sources and layers if they already exist\r\n                if (mainMap.getSource(sourceId)) {\r\n                    mainMap.removeLayer(layerId);\r\n                    mainMap.removeSource(sourceId);\r\n                }\r\n                if (mainMap.getSource(poiSourceId)) {\r\n                    mainMap.removeLayer(poiLayerId);\r\n                    mainMap.removeSource(poiSourceId);\r\n                }\r\n\r\n                // Add the GPX track as a GeoJSON source\r\n                mainMap.addSource(sourceId, {\r\n                    'type': 'geojson',\r\n                    'data': {\r\n                        \"type\": \"FeatureCollection\",\r\n                        \"features\": trackFeatures\r\n                    }\r\n                });\r\n\r\n                // Add a line layer to display the GPX track\r\n                mainMap.addLayer({\r\n                    'id': layerId,\r\n                    'type': 'line',\r\n                    'source': sourceId,\r\n                    'layout': {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round'\r\n                    },\r\n                    'paint': {\r\n                        'line-color': '#c3002f', // Red color for the track\r\n                        'line-width': 3\r\n                    }\r\n                });\r\n\r\n                // Calculate total distance and elevation gain\r\n                let distance = length(geojson, { units: 'kilometers' });\r\n                let totalElevationGain = 0;\r\n                const coordinates = trackFeatures[0].geometry.coordinates;\r\n                for (let i = 1; i < coordinates.length; i++) {\r\n                    const prevElevation = coordinates[i - 1][2];\r\n                    const currElevation = coordinates[i][2];\r\n                    if (currElevation > prevElevation) {\r\n                        totalElevationGain += currElevation - prevElevation;\r\n                    }\r\n                }\r\n\r\n                // Add POIs if present\r\n                if (track.pois && track.pois.length > 0) {\r\n                    const poiFeatures = track.pois.map(poi => ({\r\n                        \"type\": \"Feature\",\r\n                        \"geometry\": {\r\n                            \"type\": \"Point\",\r\n                            \"coordinates\": [poi.lng, poi.lat]\r\n                        },\r\n                        \"properties\": {\r\n                            \"name\": poi.name,\r\n                            \"icon\": poi.icon,\r\n                            \"description\": poi.description,\r\n                            \"image\": poi.image\r\n                        }\r\n                    }));\r\n\r\n                    // Add a source for the POIs\r\n                    mainMap.addSource(poiSourceId, {\r\n                        'type': 'geojson',\r\n                        'data': {\r\n                            \"type\": \"FeatureCollection\",\r\n                            \"features\": poiFeatures\r\n                        }\r\n                    });\r\n\r\n                    // Add a symbol layer for the POIs\r\n                    mainMap.addLayer({\r\n                        'id': poiLayerId,\r\n                        'type': 'symbol',\r\n                        'source': poiSourceId,\r\n                        'layout': {\r\n                            'icon-image': ['get', 'icon'],\r\n                            'icon-size': 0.15,\r\n                            'icon-allow-overlap': true,\r\n                            'text-field': ['get', 'name'],\r\n                            'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\r\n                            'text-offset': [0, 1],\r\n                            'text-anchor': 'top'\r\n                        },\r\n                        'paint': {\r\n                            'text-color': '#666666', // Set the text color for the POI labels\r\n                            'text-halo-color': 'white', // Optional: Add a halo for better visibility\r\n                            'text-halo-width': 1\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                // Add POI interactions\r\n                addPOIPopupInteraction(mainMap, poiLayerId);\r\n\r\n                // Add interactions based on route type\r\n                if (track.type === 'loop') {\r\n                    addLoopRouteInteraction(mainMap, layerId, geojson, track, distance, totalElevationGain);\r\n                } else {\r\n\r\n                    addOutAndBackRouteInteraction(mainMap, layerId, geojson, track, distance, totalElevationGain);\r\n                }\r\n                \r\n\r\n                // Store the popup instance and its update function for future updates\r\n                const popupEntry = {\r\n                    layerId,\r\n                    geojson,\r\n                    track,\r\n                    distance,\r\n                    totalElevationGain,\r\n                    popup: null, // Initially, there is no active popup\r\n                    updateContent: function () {\r\n                        if (this.popup) {\r\n                            updatePopupContent(this.popup, this.geojson, this.track, this.track.selectedDirection);\r\n                        }\r\n                    }\r\n                };\r\n                popupdata.push(popupEntry);\r\n\r\n                // Change the cursor to a pointer when the mouse is over the track, route name, or POIs\r\n                mainMap.on('mouseenter', layerId, function () {\r\n                    mainMap.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                mainMap.on('mouseenter', poiLayerId, function () {\r\n                    mainMap.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                mainMap.on('mouseenter', nameLayerId, function () {\r\n                    mainMap.getCanvas().style.cursor = 'pointer';\r\n                });\r\n\r\n                // Change it back to the default when it leaves\r\n                mainMap.on('mouseleave', layerId, function () {\r\n                    mainMap.getCanvas().style.cursor = '';\r\n                });\r\n                mainMap.on('mouseleave', poiLayerId, function () {\r\n                    mainMap.getCanvas().style.cursor = '';\r\n                });\r\n                mainMap.on('mouseleave', nameLayerId, function () {\r\n                    mainMap.getCanvas().style.cursor = '';\r\n                });\r\n            })\r\n            .catch(error => console.log('Error loading GPX track: ', error));\r\n    });\r\n}\r\n\r\n\r\n// Function to load all GPX tracks and their POIs\r\nfunction loadGPXTracks() {\r\n    if (!mainMap) {\r\n        console.error('Map is not initialized');\r\n        return;\r\n    }\r\n\r\n    // Fetch the tracks from the JSON file\r\n    fetch('Tracks/tracks.json')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch tracks.json: ${response.statusText}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(tracks => {\r\n            // Use Promise.all to load POIs for all tracks before processing them\r\n            return Promise.all(\r\n                tracks.map((track, index) => {\r\n                    return loadPOIs(track.url).then(pois => {\r\n                        track.pois = pois; // Assign loaded POIs to the track\r\n                        return { track, index }; // Return the track along with its index\r\n                    });\r\n                })\r\n            );\r\n        })\r\n        .then(tracksWithIndices => {\r\n            // Now load each track with the preserved index\r\n            tracksWithIndices.forEach(({ track, index }) => {\r\n                loadGPXTracksWithPOIs([track], index);\r\n            });\r\n        })\r\n        .catch(error => console.error('Error loading tracks file:', error));\r\n}\r\n\r\nfunction loadPOIs(trackUrl) {\r\n    // Derive the POI file path from the track URL\r\n    const trackName = trackUrl.split('/').slice(-1)[0].replace('.gpx', '');\r\n    const poiFilePath = `Tracks/${trackName}/poi.txt`;\r\n\r\n    return fetch(poiFilePath)\r\n        .then(response => response.text())\r\n        .then(text => {\r\n            try {\r\n                return JSON.parse(text);\r\n            } catch (error) {\r\n                console.error('Error parsing POI data:', error);\r\n                return [];\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error loading POI file:', error);\r\n            return [];\r\n        });\r\n}\r\n\r\n\r\n// Import all other js\r\nimport './calculations.js';\r\n//import './track-loader.js';\r\nimport './poi-loader.js';\r\nimport './interactions.js';\r\n"],"names":["getCoord","coord","getCoords","coords","containsNumber","coordinates","geojsonType","value","type","name","featureOf","feature","collectionOf","featureCollection","getGeom","geojson","getType","_name","earthRadius","factors","areaFactors","geom","properties","options","feat","geometry","_options","polygon","multiPoint","multiLineString","multiPolygon","points","ring","j","polygons","lineStrings","features","fc","geometryCollection","geometries","round","num","precision","multiplier","radiansToLength","radians","units","factor","lengthToRadians","distance","lengthToDegrees","radiansToDegrees","bearingToAzimuth","bearing","angle","azimuthToBearing","degreesToRadians","degrees","convertLength","length","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","input","validateBBox","bbox","validateId","id","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","turf_distance_default","coordEach","callback","excludeWrapCoord","k","l","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","coordReduce","initialValue","previousValue","currentCoord","propEach","i","propReduce","currentProperties","featureEach","featureReduce","currentFeature","coordAll","geomEach","g","featureProperties","featureBBox","featureId","geomReduce","currentGeometry","flattenEach","coordinate","flattenReduce","segmentEach","feature2","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentReduce","started","lineEach","lineReduce","currentLine","findSegment","findPoint","segment","turf_length_default","start","end","calculateFinalBearing","lon1","lon2","b","bear","turf_bearing_default","destination","origin","longitude1","latitude1","bearingRad","latitude2","longitude2","lng","lat","turf_destination_default","TinyQueue","data","compare","defaultCompare","item","top","bottom","pos","parent","current","halfLength","left","best","right","checkWhichEventIsLeft","e1","e2","checkWhichSegmentHasRightEndpointFirst","seg1","seg2","Event","p","ringId","eventId","eventToCheck","fillEventQueue","eventQueue","processFeature","featureOrGeometry","ii","currentP","nextP","iii","Segment","event","testSegmentIntersect","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","x","y","runCheck","ignoreSelfIntersections","intersectionPoints","outQueue","otherSeg","intersection","sweeplineIntersections","lineIntersect","line1","line2","removeDuplicates","intersections","results","unique","key","r","turf_line_intersect_default","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","__spreadValues","prop","__spreadProps","nearestPointOnLine","lines","pt","closestPt","line","_featureIndex","sectionLength","heightDistance","direction","perpendicularPt1","perpendicularPt2","intersect","intersectPt","turf_nearest_point_on_line_default","addOutAndBackRouteInteraction","mainMap","layerId","track","totalDistance","totalElevationGain","e","clickedPoint","nearestIndex","forwardDistance","forwardElevationGain","segmentDistance","elevationDiff","outAndBackDistance","outAndBackElevationGain","popupContent","popup","index","nearestPoint","distanceToPoint","elevationToPoint","convertedDistance","convertedElevation","directionToggle","addLoopRouteInteraction","elevationAtNearestPoint","popupEntry","addPOIPopupInteraction","poiLayerId","description","imageUrl","elevation","elevationGain","unitSwitch","unitLabel","mapStyleSelect","expirationTime","waitForMap","loadPreferences","unit","setPreference","updateAllPopups","selectedStyle","applyMapStyle","currentTime","preference","unitPreference","isValid","mapStylePreference","timestamp","updateToggleBarStyle","backgroundColor","textColor","toggleBar","label","style","reloadRoutesAndPOIs","response","tracks","pois","tracksWithIndices","error","isLight","loadGoogleTag","tagSnippet","container","addMapImages","loadGPXTracks","images","image","resolve","reject","loadedImage","str","gpxDoc","trackName","trackFeatures","sourceId","poiSourceId","nameLayerId","prevElevation","currElevation","poiFeatures","poi","trackUrl","poiFilePath","text"],"sourceRoot":""}